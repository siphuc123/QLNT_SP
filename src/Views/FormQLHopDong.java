package Views;

import DAO.HopDongDAO;
import DAO.KhachThueDDDAO;
import DAO.NguoiDungDAO;
import DAO.PhongTroDAO;
import Entity.HopDong;
import Entity.KhachThueDD;
import Entity.NguoiDung;
import Entity.PhongTro;
import Helper.DialogHelper;
import Helper.ShareHelper;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.List;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class FormQLHopDong extends javax.swing.JPanel {

    public FormQLHopDong() {
        initComponents();
        tblHopDong.getTableHeader().setFont(new Font("Calibri", 0, 22));
        init();
    }
    private TableRowSorter<TableModel> rowSorter;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    HopDongDAO hddao = new HopDongDAO();
    NguoiDungDAO nddao = new NguoiDungDAO();
    KhachThueDDDAO ktdao = new KhachThueDDDAO();
    PhongTroDAO ptdao = new PhongTroDAO();
    int row = -1;
    DecimalFormat dcf = new DecimalFormat("###,### VND");
    DecimalFormat dcf1 = new DecimalFormat("###,###");
    void init() {
        this.fillTable();
        this.row = -1;
        this.updateStatus();
        tblHopDong.getTableHeader().setFont(new Font("Calibri", 0, 18));
        tblHopDong.getColumnModel().getColumn(0).setMaxWidth(1000);
        tblHopDong.getColumnModel().getColumn(0).setPreferredWidth(120);
        tblHopDong.getColumnModel().getColumn(1).setMaxWidth(1000);
        tblHopDong.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblHopDong.getColumnModel().getColumn(2).setMaxWidth(1000);
        tblHopDong.getColumnModel().getColumn(2).setPreferredWidth(100);
        tblHopDong.getColumnModel().getColumn(3).setMaxWidth(1000);
        tblHopDong.getColumnModel().getColumn(3).setPreferredWidth(130);
        tblHopDong.getColumnModel().getColumn(4).setMaxWidth(1000);
        tblHopDong.getColumnModel().getColumn(4).setPreferredWidth(130);
        tblHopDong.getColumnModel().getColumn(5).setMaxWidth(1000);
        tblHopDong.getColumnModel().getColumn(5).setPreferredWidth(150);
        rowSorter = new TableRowSorter<>(tblHopDong.getModel());
        tblHopDong.setRowSorter(rowSorter);
        tblHopDong.setShowGrid(true);
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblHopDong.getModel();
        model.setRowCount(0);
        try {
            List<HopDong> list = hddao.selectAll(); // Đọc dữ liệu từ database
            for (HopDong hd : list) {
                Object[] row = {
                    hd.getMaHopDong(),
                    hd.getMaPhong(),
                    hd.getMaKTDD(),
                    hd.getNgayThue(),
                    hd.getNgayLap(),
                    dcf.format(hd.getTienCoc()),
                    nddao.findById(hd.getMaNguoiDung()).getHoTen()
                };
                model.addRow(row); // Thêm một hàng vào bảng
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }

    void SortListSearching() {
        txtSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = txtSearch.getText().trim();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = txtSearch.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Không hỗ trợ điều này !.");
            }
        });
    }

    void insert() {
        if (check()) {
            HopDong hd = getForm();
            try {
                hddao.insert(hd);
                ptdao.updateTrangThai("Đang thuê", hd.getMaPhong());
                this.fillTable();
                DialogHelper.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                DialogHelper.alert(this, "Thêm mới thất bại!");
                e.printStackTrace();
            }
        }
    }

    void delete() {
        String MaPhong = txtMaPhong.getText();

        if (DialogHelper.confirm(this, "Bạn thực sự muốn xóa hợp đồng này?")) {
            try {
                hddao.delete(MaPhong);
                ptdao.updateTrangThai("Trống", MaPhong);
                this.fillTable();
                this.clear();
                DialogHelper.alert(this, "Xóa thành công!");
            } catch (Exception e) {
                DialogHelper.alert(this, "Xóa thất bại!");
                e.printStackTrace();
            }
        }

    }

    void edit() {
        String MaPhong = String.valueOf(tblHopDong.getValueAt(row, 1));
        HopDong hd = hddao.selectByMaPhong(MaPhong);
        this.setForm(hd);
        tabs.setSelectedIndex(0);
        this.updateStatus();
    }

    void setForm(HopDong hd) {
        txtMaNguoiDung.setText(hd.getMaNguoiDung());
        txtMaKTDD.setText(hd.getMaKTDD());
        dchNgayThue.setDate(hd.getNgayThue());
        dchNgayLap.setDate(hd.getNgayLap());
        txtMaPhong.setText(hd.getMaPhong());
        txtTienCoc.setText(String.valueOf(dcf1.format(hd.getTienCoc())));
        txtMaKTDD.setToolTipText(ktdao.findById(txtMaKTDD.getText()).getHoTen());
        txtMaNguoiDung.setToolTipText(nddao.findById(txtMaNguoiDung.getText()).getHoTen());
    }

    HopDong getForm() {
        HopDong hd = new HopDong();
        hd.setMaNguoiDung(txtMaNguoiDung.getText());
        hd.setMaKTDD(txtMaKTDD.getText().toUpperCase());
        hd.setNgayLap(dchNgayLap.getDate());
        hd.setNgayThue(dchNgayThue.getDate());
        hd.setMaPhong(txtMaPhong.getText().toUpperCase());
        hd.setTienCoc(Double.valueOf(txtTienCoc.getText()));
        return hd;
    }

    void clear() {
        this.row = -1;
        if (ShareHelper.USER != null) {
            txtMaNguoiDung.setText(ShareHelper.USER.getMaNguoiDung());
        }
        txtMaKTDD.setText("");
        dchNgayThue.setDate(new Date());
        dchNgayLap.setDate(new Date());
        txtMaPhong.setText("");
        txtTienCoc.setText("");
        txtMaKTDD.grabFocus();
        this.updateStatus();
    }

    void updateStatus() {
        boolean edit = (this.row >= 0);
        // Trạng thái form
        btnAdd.setEnabled(!edit);
        btnDelete.setEnabled(edit);
    }
// kiểm tra thông tin trước khi thêm hợp đồng mới

    boolean check() {
        if (txtMaNguoiDung.getText().isEmpty()) {
            DialogHelper.alert(this, "Vui lòng nhập mã người dùng!");
            txtMaNguoiDung.grabFocus();
            return false;
        }
        boolean check = false;
        List<NguoiDung> list = nddao.selectAll();
        for (NguoiDung nd : list) {
            if (txtMaNguoiDung.getText().equals(nd.getMaNguoiDung())) {
                check = true;
                break;
            }
        }
        boolean check2 = false;
        List<KhachThueDD> list2 = ktdao.selectAll();
        for (KhachThueDD kt : list2) {
            if (txtMaKTDD.getText().toUpperCase().equals(kt.getMaKTDD())) {
                check2 = true;
                break;
            }
        }
        boolean check3 = false;
        List<PhongTro> list3 = ptdao.selectAll();
        for (PhongTro pt : list3) {
            if (txtMaPhong.getText().toUpperCase().equals(pt.getMaPhong())) {
                check3 = true;
                break;
            }
        }
        boolean check4 = false;
        List<PhongTro> list4 = ptdao.selectPhongDangThue();
        for (PhongTro pt : list4) {
            if (txtMaPhong.getText().toUpperCase().equals(pt.getMaPhong())) {
                check4 = true;
                break;
            }
        }
        if (check == false) {
            DialogHelper.alert(this, "Mã người dùng không tồn tại!");
            txtMaNguoiDung.grabFocus();
            return false;
        }
        if (txtMaKTDD.getText().isEmpty()) {
            DialogHelper.alert(this, "Vui lòng nhập mã khách thuê đại diện!");
            txtMaKTDD.grabFocus();
            return false;
        }
        if (check2 == false) {
            DialogHelper.alert(this, "Mã khách thuê không tồn tại!");
            txtMaKTDD.grabFocus();
            return false;
        }
        if (dchNgayThue.getDate().compareTo(dchNgayLap.getDate()) > 0) {
            DialogHelper.alert(this, "Ngày thuê không được trước ngày lập hợp đồng!");
        }
        if (txtMaPhong.getText().isEmpty()) {
            DialogHelper.alert(this, "Vui lòng nhập mã phòng!");
            txtMaPhong.grabFocus();
            return false;
        }
        if (check3 == false) {
            DialogHelper.alert(this, "Mã phòng không tồn tại!");
            txtMaPhong.grabFocus();
            return false;
        }
        if (check4) {
            DialogHelper.alert(this, "Mã phòng này đã được thuê!");
            txtMaPhong.grabFocus();
            return false;
        }
        if (txtTienCoc.getText().isEmpty()) {
            DialogHelper.alert(this, "Vui lòng nhập tiền cọc!");
            txtTienCoc.grabFocus();
            return false;
        }
        return true;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        JPanelHopDong = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        txtMaNguoiDung = new javax.swing.JTextField();
        dchNgayThue = new com.toedter.calendar.JDateChooser();
        dchNgayLap = new com.toedter.calendar.JDateChooser();
        txtTienCoc = new javax.swing.JTextField();
        txtMaKTDD = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHopDong = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(227, 240, 252));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 30)); // NOI18N
        jLabel1.setText("QUẢN LÝ HỢP ĐỒNG");

        tabs.setBackground(new java.awt.Color(227, 240, 252));
        tabs.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        JPanelHopDong.setBackground(new java.awt.Color(227, 240, 252));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Mã người dùng");

        txtMaPhong.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Mã khách thuê");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Ngày thuê");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Ngày lập");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Mã phòng");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Tiền cọc");

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 204, 204));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/plus.png"))); // NOI18N
        btnAdd.setText("  THÊM");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 204, 204));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete.png"))); // NOI18N
        btnDelete.setText("  XÓA");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setOpaque(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setBackground(new java.awt.Color(255, 255, 255));
        btnNew.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnNew.setForeground(new java.awt.Color(0, 204, 204));
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/refresh.png"))); // NOI18N
        btnNew.setText("  MỚI");
        btnNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNew.setOpaque(false);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        txtMaNguoiDung.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        dchNgayThue.setPreferredSize(new java.awt.Dimension(156, 35));

        dchNgayLap.setPreferredSize(new java.awt.Dimension(156, 35));

        txtTienCoc.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTienCoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienCocKeyReleased(evt);
            }
        });

        txtMaKTDD.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("VND");

        javax.swing.GroupLayout JPanelHopDongLayout = new javax.swing.GroupLayout(JPanelHopDong);
        JPanelHopDong.setLayout(JPanelHopDongLayout);
        JPanelHopDongLayout.setHorizontalGroup(
            JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelHopDongLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtMaNguoiDung, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                        .addComponent(txtMaKTDD, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(JPanelHopDongLayout.createSequentialGroup()
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dchNgayLap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                        .addComponent(dchNgayThue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(JPanelHopDongLayout.createSequentialGroup()
                        .addComponent(txtTienCoc, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)))
                .addContainerGap(265, Short.MAX_VALUE))
        );
        JPanelHopDongLayout.setVerticalGroup(
            JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelHopDongLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaNguoiDung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaKTDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(dchNgayThue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(dchNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTienCoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(104, 104, 104)
                .addGroup(JPanelHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        tabs.addTab("  HỢP ĐỒNG  ", JPanelHopDong);

        jPanel2.setBackground(new java.awt.Color(227, 240, 252));

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        tblHopDong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblHopDong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hợp đồng", "Mã phòng", "Khách thuê", "Ngày thuê", "Ngày lập", "Tiền cọc", "Người lập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHopDong.setRowHeight(35);
        tblHopDong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHopDongMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblHopDong);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel10.setText("Tìm kiếm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        tabs.addTab("   DANH SÁCH   ", jPanel2);

        tabs.setSelectedIndex(1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(444, 444, 444)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(tabs)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tabs)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblHopDongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHopDongMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = tblHopDong.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblHopDongMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clear();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        insert();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        SortListSearching();

    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        SortListSearching();

    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtTienCocKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienCocKeyReleased
        if (txtTienCoc.getText().contains(",")) {
            txtTienCoc.setText(txtTienCoc.getText().replaceAll(",", ""));
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            if (!txtTienCoc.getText().equals("")) {
                txtTienCoc.setText(dcf.format(Double.parseDouble(txtTienCoc.getText())));
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            if (!txtTienCoc.getText().equals("")) {
                txtTienCoc.setText(dcf.format(Double.parseDouble(txtTienCoc.getText())));
            }
        } else if (txtTienCoc.getText().contains(" ")) {
            txtTienCoc.setText(txtTienCoc.getText().replaceAll(" ", ""));
            if (!txtTienCoc.getText().equals("")) {
                txtTienCoc.setText(dcf.format(Double.parseDouble(txtTienCoc.getText())));
            }
        } else if (!txtTienCoc.getText().replaceAll(",", "").matches("[0-9]+")) {
            DialogHelper.alert(this, "Giá phòng chỉ nhập số !");
            txtTienCoc.setText("");
        } else {
            txtTienCoc.setText(dcf.format(Double.parseDouble(txtTienCoc.getText())));
        }
    }//GEN-LAST:event_txtTienCocKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelHopDong;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private com.toedter.calendar.JDateChooser dchNgayLap;
    private com.toedter.calendar.JDateChooser dchNgayThue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblHopDong;
    private javax.swing.JTextField txtMaKTDD;
    private javax.swing.JTextField txtMaNguoiDung;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTienCoc;
    // End of variables declaration//GEN-END:variables
}
